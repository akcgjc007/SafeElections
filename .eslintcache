[{"/home/pam/Documents/U_ETH_1/myContracts/src/App.js":"1","/home/pam/Documents/U_ETH_1/myContracts/src/eth/web3.js":"2","/home/pam/Documents/U_ETH_1/myContracts/src/eth/giveAndTake.js":"3","/home/pam/Documents/U_ETH_1/myContracts/src/eth/simpleStorage.js":"4","/home/pam/Documents/U_ETH_1/myContracts/src/components/SimpleStorage.js":"5","/home/pam/Documents/U_ETH_1/myContracts/src/reportWebVitals.js":"6","/home/pam/Documents/U_ETH_1/myContracts/src/components/CounterApp.js":"7","/home/pam/Documents/U_ETH_1/myContracts/src/components/GiveAndTake.js":"8","/home/pam/Documents/U_ETH_1/myContracts/src/index.js":"9","/home/pam/Documents/U_ETH_1/myContracts/src/components/Elections.js":"10","/home/pam/Documents/U_ETH_1/myContracts/src/eth/factory.js":"11","/home/pam/Documents/U_ETH_1/myContracts/src/eth/election.js":"12","/home/pam/Documents/U_ETH_1/myContracts/src/components/OneElection.js":"13"},{"size":2281,"mtime":1609461131280,"results":"14","hashOfConfig":"15"},{"size":513,"mtime":1609280525238,"results":"16","hashOfConfig":"15"},{"size":276,"mtime":1609327280959,"results":"17","hashOfConfig":"15"},{"size":282,"mtime":1609311422170,"results":"18","hashOfConfig":"15"},{"size":4183,"mtime":1609327674984,"results":"19","hashOfConfig":"15"},{"size":362,"mtime":1609195640679,"results":"20","hashOfConfig":"15"},{"size":805,"mtime":1609459501392,"results":"21","hashOfConfig":"15"},{"size":4065,"mtime":1609458985050,"results":"22","hashOfConfig":"15"},{"size":500,"mtime":1609197360515,"results":"23","hashOfConfig":"15"},{"size":4936,"mtime":1609461585405,"results":"24","hashOfConfig":"15"},{"size":264,"mtime":1609446750596,"results":"25","hashOfConfig":"15"},{"size":269,"mtime":1609337759226,"results":"26","hashOfConfig":"15"},{"size":4537,"mtime":1609459442716,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"1yuy3xb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/home/pam/Documents/U_ETH_1/myContracts/src/App.js",["60","61","62","63","64","65","66","67"],"import React, { Component } from 'react';\nimport { Container, Grid, Header, Icon, Image, Menu, Message, Segment, Sidebar, Input, Divider } from 'semantic-ui-react';\n\nimport CounterApp from \"./components/CounterApp\";\nimport GiveAndTake from './components/GiveAndTake';\nimport SimpleStorage from './components/SimpleStorage';\nimport Elections from \"./components/Elections\";\n\n\nclass App extends Component {\n\tstate = {\n\t\tactiveItem: 'CounterApp',\n\t\tactiveContent: <CounterApp />\n\t}\n\n\thandleItemClick = (e, { name }) => {\n\t\tthis.setState({\n\t\t\tactiveItem: name,\n\t\t});\n\n\t\tswitch (name) {\n\t\t\tcase 'CounterApp':\n\t\t\t\tthis.setState({ activeContent: <CounterApp /> });\n\t\t\t\tbreak;\n\t\t\tcase 'GiveAndTake':\n\t\t\t\tthis.setState({ activeContent: <GiveAndTake /> });\n\t\t\t\tbreak;\n\t\t\tcase 'SimpleStorage':\n\t\t\t\tthis.setState({ activeContent: <SimpleStorage /> });\n\t\t\t\tbreak;\n\t\t\tcase 'Election':\n\t\t\t\tthis.setState({ activeContent: <Elections /> });\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\tthis.setState({ activeContent: <CounterApp /> });\n\t\t\t\tbreak;\n\t\t}\n\n\t};\n\n\n\trender() {\n\t\tconst { activeItem } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<link async rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n\t\t\t\t<script async src=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js\" />\n\t\t\t\t<Container style={{ margin: '20px' }}>\n\t\t\t\t\t<Menu inverted>\n\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\tname='CounterApp'\n\t\t\t\t\t\t\tactive={activeItem === 'CounterApp'}\n\t\t\t\t\t\t\tonClick={this.handleItemClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\tname='SimpleStorage'\n\t\t\t\t\t\t\tactive={activeItem === 'SimpleStorage'}\n\t\t\t\t\t\t\tonClick={this.handleItemClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\tname='GiveAndTake'\n\t\t\t\t\t\t\tactive={activeItem === 'GiveAndTake'}\n\t\t\t\t\t\t\tonClick={this.handleItemClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\tname='Election'\n\t\t\t\t\t\t\tactive={activeItem === 'Election'}\n\t\t\t\t\t\t\tonClick={this.handleItemClick}\n\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t</Menu>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Message info>\n\t\t\t\t\t\t\t<Message.Header>ATTENTION !!! Testing Phase</Message.Header>\n\t\t\t\t\t\tAll transactions are demo transactions hosted on Kovan testing network.\n\t\t\t\t\t\t<br />Please switch your wallet to Kovan testing network.\n\n\t\t\t\t\t</Message>\n\t\t\t\t\t\t{this.state.activeContent}\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","/home/pam/Documents/U_ETH_1/myContracts/src/eth/web3.js",[],"/home/pam/Documents/U_ETH_1/myContracts/src/eth/giveAndTake.js",[],"/home/pam/Documents/U_ETH_1/myContracts/src/eth/simpleStorage.js",[],"/home/pam/Documents/U_ETH_1/myContracts/src/components/SimpleStorage.js",["68","69"],"/home/pam/Documents/U_ETH_1/myContracts/src/reportWebVitals.js",[],["70","71"],"/home/pam/Documents/U_ETH_1/myContracts/src/components/CounterApp.js",[],"/home/pam/Documents/U_ETH_1/myContracts/src/components/GiveAndTake.js",["72","73","74"],"import React, { Component } from \"react\";\nimport { Segment, Icon, Header, Button, Input, Form, Container, Message } from \"semantic-ui-react\";\n\nimport giveAndTake from \"./../eth/giveAndTake\"\nimport web3 from \"./../eth/web3\"\n\nexport default class GiveAndTake extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentBalance: <div>Fetching  <Icon loading name='circle notch' /></div>,\n\t\t\tcontractBalance: <div>Fetching  <Icon loading name='circle notch' /></div>,\n\t\t\terrorMessage: '',\n\t\t\tloading: false,\n\t\t\ttransAmountGive: '',\n\t\t\ttransMessageTake: '',\n\t\t\terrorOcc: false,\n\t\t\ttransMessageHidden: true\n\t\t}\n\t}\n\n\n\tfetchBalance = async()=>{\n\t\tthis.setState({\n\t\t\tcontractBalance: await giveAndTake.methods.getBalance().call()\n\t\t});\n\n\t}\n\n\tasync componentDidMount(){\n\n\t\ttry {\n\t\t\tawait this.fetchBalance();\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\tthis.setState({\n\t\t\t\tcurrentBalance: await web3.eth.getBalance(accounts[0])\n\t\t\t});\n\t\t} catch (error) {\n\n\t\t}\n\t}\n\n\n\n\tgive = async (event) => {\n\t\tthis.setState({ loading: true });\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\tconst res = await giveAndTake.methods.give()\n\t\t\t\t.send({\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tgas: '1000000',\n\t\t\t\t\tvalue: this.state.transAmountGive\n\t\t\t\t});\n\t\t\tthis.fetchBalance();\n\t\t\tthis.setState({\n\t\t\t\ttransMessage: 'Transaction successful. We have successfully received your amount.',\n\t\t\t\terrorOcc: false\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\terrorOcc: true,\n\t\t\t\ttransMessage: err.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\ttransMessageHidden: false\n\t\t});\n\t}\n\n\n\ttake = async (event) => {\n\t\tthis.setState({ loading: true });\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\tconst res = await giveAndTake.methods.take(this.state.transAmountTake)\n\t\t\t\t.send({\n\t\t\t\t\tfrom: accounts[0],\n\t\t\t\t\tgas: '1000000',\n\t\t\t\t});\n\n\t\t\tthis.fetchBalance();\n\t\t\tthis.setState({\n\t\t\t\ttransMessage: 'Transaction successful. We have successfully deposited funds into your account.',\n\t\t\t\terrorOcc: false\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.setState({\n\t\t\t\terrorOcc: true,\n\t\t\t\ttransMessage: err.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\ttransMessageHidden: false\n\t\t});\n\t}\n\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Segment loading={this.state.loading}>\n\t\t\t\t<Header as='h2'>\n\t\t\t\t\t<Icon name='handshake' />\n\t\t\t\t\t<Header.Content>\n\t\t\t\t\t\tGive And Take\n      \t\t\t<Header.Subheader>\n\t\t\t\t\t\t\tNo boundaries whatsoever.\n\t\t\t\t\t\t</Header.Subheader>\n\t\t\t\t\t</Header.Content>\n\t\t\t\t</Header>\n\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Icon name='dollar sign' />\n\t\t\t\t\t\t<b>Contract Balance:</b>  {this.state.contractBalance}  Wei\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Icon name='money bill alternate' />\n\t\t\t\t\t\t<b>Your Balance:</b>  {this.state.currentBalance}  Wei\n\n\t\t\t\t\t</Segment>\n\t\t\t\t</Segment.Group>\n\n\t\t\t\t<Segment>\n\t\t\t\t\t<Form onSubmit={this.give} error={!!this.state.errorMessage}>\n\t\t\t\t\t\t<Button disabled={this.state.loading} color='green'>\n\t\t\t\t\t\t\tGive\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlabelPosition='right'\n\t\t\t\t\t\t\tlabel='Wei'\n\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\tvalue={this.state.transAmountGive}\n\t\t\t\t\t\t\tonChange={event => this.setState({ transAmountGive: event.target.value, errorOcc: false, transMessageHidden: true })}\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>\n\n\t\t\t\t<Segment>\n\t\t\t\t\t<Form onSubmit={this.take} error={!!this.state.errorMessage}>\n\t\t\t\t\t\t<Button disabled={this.state.loading} color='blue'>\n\t\t\t\t\t\t\tTake\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlabelPosition='right'\n\t\t\t\t\t\t\tlabel='Wei'\n\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\tvalue={this.state.transAmountTake}\n\t\t\t\t\t\t\tonChange={event => this.setState({ transAmountTake: event.target.value, errorOcc: false, transMessageHidden: true })}\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</Input>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>\n\t\t\t\t<Message\n\t\t\t\t\thidden={this.state.transMessageHidden}\n\t\t\t\t\tpositive={!this.state.errorOcc}\n\t\t\t\t\tnegative={this.state.errorOcc}\n\t\t\t\t\tcontent={this.state.transMessage}\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t);\n\t}\n}","/home/pam/Documents/U_ETH_1/myContracts/src/index.js",[],["75","76"],"/home/pam/Documents/U_ETH_1/myContracts/src/components/Elections.js",["77","78","79","80","81"],"import React, { Component } from \"react\";\nimport { Segment, Icon, Header, Button, Input, Form, Container, Message, Card, Item, Accordion, Grid } from \"semantic-ui-react\";\n\nimport factory from \"./../eth/factory\"\nimport OneElection from \"./OneElection\";\nimport web3 from \"./../eth/web3\";\n\nexport default class Election extends Component {\n    messagesEndRef = React.createRef();\n    scrollToBottom = () => {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            electionAddress: [],\n            isLoading: false,\n            inputCand: \"\",\n            inputDesc: \"\"\n        }\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(\"SUBMITTING THE ELECTION.\");\n\n\n        const _names = this.state.inputCand.split(',');\n\n        // Signal parent for loading \n        this.loadFunction();\n        // Now process the transaction\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const res = await factory.methods\n            .createElection(_names, this.state.inputDesc)\n            .send({\n                from: accounts[0],\n                gas: '5000000'\n            });\n        } catch (err) {\n\n        }\n\n        // Signal parent for stop loading\n        this.unloadFunction();\n    }\n\n    async componentDidMount() {\n        try {\n\n            const _addr = await factory.methods.getDeployedElections().call();\n\n            this.setState({\n                electionAddress: _addr\n            });\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    loadFunction = () => {\n        this.setState({\n            isLoading: true\n        });\n    }\n    unloadFunction = () => {\n        this.setState({\n            isLoading: false\n        });\n    };\n\n\n\n\n    render() {\n        const listItems = this.state.electionAddress.map((addr) => (\n            <OneElection\n                key={addr}\n                loadFunction={this.loadFunction}\n                unloadFunction={this.unloadFunction}\n                addr={addr} />\n        ));\n\n        return (\n            <Container>\n                <Button\n                    onClick={this.scrollToBottom}\n                    primary floated=\"right\" content=\"HOST YOUR ELECTION\" />\n\n                <Header as='h2'>\n                    <Icon name='box' />\n                    <Header.Content>\n                        Elections\n      \t\t\t        <Header.Subheader>\n                            Safe and Controlled.\n\t\t\t\t\t\t</Header.Subheader>\n                    </Header.Content>\n                </Header>\n\n                <Segment loading={this.state.isLoading}>\n                    {listItems}\n                </Segment>\n\n                <div ref={this.messagesEndRef} />\n                <Segment>\n                    <Form>\n                        <Header>\n                            Launch your own election\n                        </Header>\n                        <Message>\n                            Rules:\n                            <li>After registering the election, voting would immediately begin for all users.</li>\n                            <li>After registering the election, you won't be able to change any information about candidates.</li>\n                            <li>After registering the election, you can end the election simply by going under admin tool.</li>\n                            <li>Admin tools would only be visible to you, when you login as your admin account.</li>\n\n                        </Message>\n\n\n\n\n\n\n                        <Input\n                            type=\"text\"\n                            placeholder=\"National elections.\"\n                            label=\"Description\"\n                            labelPosition=\"left\"\n                            value={this.state.inputDesc}\n                            onChange={event => this.setState({ inputDesc: event.target.value })}\n                        >\n                        </Input>\n                        <br />\n                        <br />\n                        <Input\n                            type=\"text\"\n                            placeholder=\"name1,name2,name3\"\n                            label=\"Names, comma separated.\"\n                            labelPosition='left'\n                            value={this.state.inputCand}\n                            onChange={event => this.setState({ inputCand: event.target.value })}\n                        >\n                        </Input>\n                        <br />\n                        <br />\n\n                        <Button\n                            primary\n                            onClick={this.onSubmit}\n                        >\n                            Submit form.\n                        </Button>\n                    </Form>\n                </Segment>\n\n            </Container>\n        );\n    }\n\n}","/home/pam/Documents/U_ETH_1/myContracts/src/eth/factory.js",[],"/home/pam/Documents/U_ETH_1/myContracts/src/eth/election.js",[],"/home/pam/Documents/U_ETH_1/myContracts/src/components/OneElection.js",["82","83","84","85","86","87"],"import React, { Component } from \"react\";\nimport ElectionObject from \"./../eth/election\"\nimport web3 from \"./../eth/web3\"\nimport { Segment, Icon, Header, Button, Input, Form, Container, Message, Card, Item, Accordion } from \"semantic-ui-react\";\n\n\nexport default class OneElection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addr: props.addr,\n            desc: null,\n            election: null,\n            candList: [],\n            activeIndex: false,\n            isManager: false,\n            electionStatus: null,\n            statusMessage: null,\n            winner: \"---\",\n        }\n    }\n\n    updateWinnerMessage = async()=>{\n        this.setState({\n            statusMessage: <Message size=\"huge\" positive>\n                Winner: <b>{this.state.winner}</b>\n            </Message>\n        });\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                election: await ElectionObject(this.state.addr),\n            });\n            this.setState({\n                desc: await this.state.election.methods.description().call(),\n                candList: await this.state.election.methods.giveCandList().call(),\n                electionStatus: await this.state.election.methods.votingStatus().call()\n            });\n\n\n\n            if(this.state.electionStatus === true){\n                this.setState({\n                    statusMessage: <Message >You can vote.</Message>\n                });\n            } else {\n                await this.updateWinnerMessage();                \n            }\n\n            const _winner = await this.state.election.methods.winnerCand().call();\n            \n            this.setState({\n                winner: _winner,\n            });\n            await this.updateWinnerMessage();\n\n        } catch (err) {\n            console.log(\"Error occured. \", err.message);\n        }\n\n        // Implement check manager function\n        const realManager = await this.state.election.methods.ORGANIZER().call();\n        const accounts = await web3.eth.getAccounts();\n        \n        if(accounts[0] == realManager){\n            this.setState({\n                isManager: true\n            });\n        }\n\n    }\n\n    processRequest = async (index) => {\n        // Signal parent for loading \n        this.props.loadFunction();\n        // Now process the transaction\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await this.state.election.methods.vote(index)\n                .send({\n                    from: accounts[0],\n                    gas: '1000000'\n                });\n        } catch (err) {\n\n        }\n\n        // Signal parent for stop loading\n        this.props.unloadFunction();\n    }\n\n    endElection = async()=>{\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await this.state.election.methods.endVoting()\n            .send({\n                from: accounts[0],\n                gas: '5000000'\n            });\n        } catch (err) {\n            console.log(\"Error: \", err.message);\n        }\n    }\n\n    render() {\n        const options = this.state.candList.map((item, index) => {\n            return (\n                <Button\n                    disabled={!this.state.electionStatus}\n                    color=\"secondary\"\n                    key={index}\n                    onClick={() => this.processRequest(index)}\n                >\n                    {item}\n                </Button>\n            );\n        });\n\n        return (\n            <Segment>\n                <Header>\n                    {this.state.desc}\n                </Header>\n                <p>{this.state.addr}</p>\n                <Segment>\n                    {options}\n                </Segment>                \n                {this.state.statusMessage}\n\n                <Accordion hidden={!this.state.isManager || this.state.votingStatus}>\n                    <Accordion.Title as='h1' active={this.state.activeIndex} \n                    onClick={()=>{this.setState({activeIndex: !this.state.activeIndex})}}>\n                    <Icon name='dropdown' />\n                        Admin tools\n                    </Accordion.Title>\n                    <Accordion.Content active={this.state.activeIndex}>\n                        <Button onClick={this.endElection} color=\"red\">\n                            End Election \n                        </Button>\n                    </Accordion.Content>\n                </Accordion>\n            </Segment>\n        );\n    }\n}",{"ruleId":"88","severity":1,"message":"89","line":2,"column":21,"nodeType":"90","messageId":"91","endLine":2,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":2,"column":27,"nodeType":"90","messageId":"91","endLine":2,"endColumn":33},{"ruleId":"88","severity":1,"message":"93","line":2,"column":35,"nodeType":"90","messageId":"91","endLine":2,"endColumn":39},{"ruleId":"88","severity":1,"message":"94","line":2,"column":41,"nodeType":"90","messageId":"91","endLine":2,"endColumn":46},{"ruleId":"88","severity":1,"message":"95","line":2,"column":63,"nodeType":"90","messageId":"91","endLine":2,"endColumn":70},{"ruleId":"88","severity":1,"message":"96","line":2,"column":72,"nodeType":"90","messageId":"91","endLine":2,"endColumn":79},{"ruleId":"88","severity":1,"message":"97","line":2,"column":81,"nodeType":"90","messageId":"91","endLine":2,"endColumn":86},{"ruleId":"88","severity":1,"message":"98","line":2,"column":88,"nodeType":"90","messageId":"91","endLine":2,"endColumn":95},{"ruleId":"88","severity":1,"message":"99","line":2,"column":54,"nodeType":"90","messageId":"91","endLine":2,"endColumn":63},{"ruleId":"88","severity":1,"message":"100","line":2,"column":74,"nodeType":"90","messageId":"91","endLine":2,"endColumn":78},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"88","severity":1,"message":"99","line":2,"column":54,"nodeType":"90","messageId":"91","endLine":2,"endColumn":63},{"ruleId":"88","severity":1,"message":"105","line":51,"column":10,"nodeType":"90","messageId":"91","endLine":51,"endColumn":13},{"ruleId":"88","severity":1,"message":"105","line":82,"column":10,"nodeType":"90","messageId":"91","endLine":82,"endColumn":13},{"ruleId":"101","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"88","severity":1,"message":"108","line":2,"column":74,"nodeType":"90","messageId":"91","endLine":2,"endColumn":78},{"ruleId":"88","severity":1,"message":"109","line":2,"column":80,"nodeType":"90","messageId":"91","endLine":2,"endColumn":84},{"ruleId":"88","severity":1,"message":"110","line":2,"column":86,"nodeType":"90","messageId":"91","endLine":2,"endColumn":95},{"ruleId":"88","severity":1,"message":"89","line":2,"column":97,"nodeType":"90","messageId":"91","endLine":2,"endColumn":101},{"ruleId":"88","severity":1,"message":"105","line":37,"column":19,"nodeType":"90","messageId":"91","endLine":37,"endColumn":22},{"ruleId":"88","severity":1,"message":"97","line":4,"column":41,"nodeType":"90","messageId":"91","endLine":4,"endColumn":46},{"ruleId":"88","severity":1,"message":"111","line":4,"column":48,"nodeType":"90","messageId":"91","endLine":4,"endColumn":52},{"ruleId":"88","severity":1,"message":"99","line":4,"column":54,"nodeType":"90","messageId":"91","endLine":4,"endColumn":63},{"ruleId":"88","severity":1,"message":"108","line":4,"column":74,"nodeType":"90","messageId":"91","endLine":4,"endColumn":78},{"ruleId":"88","severity":1,"message":"109","line":4,"column":80,"nodeType":"90","messageId":"91","endLine":4,"endColumn":84},{"ruleId":"112","severity":1,"message":"113","line":67,"column":24,"nodeType":"114","messageId":"115","endLine":67,"endColumn":26},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'Sidebar' is defined but never used.","'Input' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'Menu' is defined but never used.","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'res' is assigned a value but never used.",["116"],["117"],"'Card' is defined but never used.","'Item' is defined but never used.","'Accordion' is defined but never used.","'Form' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]